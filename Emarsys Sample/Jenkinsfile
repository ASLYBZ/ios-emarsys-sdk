@Library('general-pipeline') _

node('master') {
  withSlack channel:'jenkins', {
      stage('Init') {
          deleteDir()
          def podVersion = (sh (returnStdout: true, script: 'pod --version')).trim()
          echo "CocoaPod version: $podVersion"
          sh "echo `xcodebuild -version`"
      }
      stage('Git Clone') {
          checkout changelog: true, poll: true, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "ios-emarsys-sample"]], submoduleCfg: [], userRemoteConfigs: [[url: 'git@github.com:emartech/ios-emarsys-sdk.git']]]
      }
      stage('Pod install') {
        lock("pod") {
            sh "cd ios-emarsys-sample/Emarsys\\ Sample/ && pod install --verbose"
        }
      }
      stage('Build as Enterprise Distribution Package') {
        sh "mkdir artifacts"
        sh "cd ios-emarsys-sample/Emarsys\\ Sample/ && fastlane gym --scheme Emarsys\\ Sample --export_method enterprise -o ../../artifacts/ --verbose --export_xcargs \"-allowProvisioningUpdates\""
        sh "cd ../../artifacts/"
        sh "mv \"Emarsys Sample.ipa\" emarsys-sample.ipa"
        archiveArtifacts "artifacts/*"
      }
      stage('Deploy IPA to Amazon S3') {
          sh env.IOS_AWS_DEPLOY_COMMAND_NEW
      }
      stage('Finish') {
        echo "That is just pure awesome!"
      }
  }
}
